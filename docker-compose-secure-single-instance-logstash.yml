version: '2.2'

services:
  esmaster:
    image: docker.elastic.co/elasticsearch/elasticsearch:${VERSION}
    container_name: esmaster
    environment:
      - node.name=esmaster
      - cluster.name=es-docker-cluster      
      - cluster.initial_master_nodes=esmaster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"      
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/esmaster/esmaster.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/esmaster/esmaster.key
      - TZ=Asia/Tashkent
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes: 
      - data01:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    ports:
      - 9200:9200
    networks:
      - elastic
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s http://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5

  kib01:
    image: docker.elastic.co/kibana/kibana:${VERSION}
    container_name: kib01
    depends_on: {"esmaster": {"condition": "service_healthy"}}
    ports:
      - 5601:5601    
    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: http://esmaster:9200
      ELASTICSEARCH_HOSTS: http://esmaster:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: $CERTS_DIR/ca/ca.crt
      TZ: Asia/Tashkent
    volumes: 
      - certs:$CERTS_DIR
    networks:
      - elastic

  apm-server:
    image: my-apm-server
    build:
      context: apm
      dockerfile: Dockerfile
    container_name: apm-server
    depends_on: {"esmaster": {"condition": "service_healthy"}}
    ports:
      - 8200:8200
    environment:
      SERVERNAME: localhost
      TZ: Asia/Tashkent
      SECRET_TOKEN: mysecrettoken
      ES_HOSTS: '["esmaster:9200"]'
      KIBANA_HOST: "kib01:5601"
      KIBANA_USER: "elastic"
      KIBANA_PASS: "changeme"
      ES_USER: "elastic"
      ES_PASS: "changeme"
    volumes:
      - certs:$CERTS_DIR
    networks:
      - elastic

  logstash:
    image: mylogstash
    build:
      context: logstash
      dockerfile: Dockerfile
    container_name: logstash
    depends_on: {"esmaster": {"condition": "service_healthy"}}
    ports:
      - 9600:9600
      - 5042:5042
    environment:
      SERVERNAME: localhost
      TZ: Asia/Tashkent
      ES_HOSTS: '["esmaster:9200"]'
      ES_USER: "elastic"
      ES_PASS: "changeme"
    volumes:
      - certs:$CERTS_DIR
    networks:
      - elastic

volumes:
  data01:
    driver: local
  certs:
    driver: local

networks:
  elastic:
    driver: bridge
    external: true
    name: elastic